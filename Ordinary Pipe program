 Question:
 Design a file-copying program named filecopy using ordinary pipes. This program will be passed two parameters: the name of the file to be 
 copied and the name of the copied file. The program will then create an ordinary pipe and write the contents of the file to be copied to 
 the pipe. The child process will read this file from the pipe and write it to the destination file. For example, if we invoke the program 
 as follows: 
filecopy input.txt copy.txt 
The file input.txt will be written to the pipe. The child process will read the contents of this file and write it to the destination file 
copy.txt.

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>

void main()
{
  char buffer[100];
  char childbuff[100];
  int fd[2], des, bytes, target;

  pipe(fd);
  if(fork()) {
  close(fd[0]);
des = open("input.txt", O_RDONLY);
    bytes = read(des, buffer, sizeof(buffer));
    write(fd[1], buffer, bytes);
  }
 else {
     close(fd[1]);
    read(fd[0], childbuff, sizeof(childbuff));
    close(fd[0]);
   printf("\nReceived string is -- %s", childbuff);
    target = open("copy.txt", O_CREAT |O_WRONLY, 00777);
    write(target, childbuff, (strlen(childbuff)-1));
    }
}
